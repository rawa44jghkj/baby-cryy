# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mVExqECJowfsqsefrSLvt6NevCRcBfBc
"""





import os
import pickle
import librosa
import numpy as np
import pandas as pd
from tensorflow import keras
from flask import Flask, request, jsonify




app = Flask(__name__)

def features_extractor(file_name):
    audio, sample_rate = librosa.load(file_name, res_type='kaiser_fast')
    mfccs_features = librosa.feature.mfcc(y=audio, sr=sample_rate, n_mfcc=40)
    mfccs_scaled_features = np.mean(mfccs_features.T,axis=0)

    return mfccs_scaled_features


def get_predict(audio_path, model_path='Model.h5', scaler_path="scaler.pkl"):
    model = keras.models.load_model(model_path)
    sc = pickle.load(open(scaler_path, 'rb'))

    audio_feature = features_extractor(audio_path)
    df = pd.DataFrame({'Data': [audio_feature]})
    x = df["Data"].apply(pd.Series)
    x = sc.transform(x)
    pred = model.predict(x)
    max_index = np.argmax(pred)
    label_mapping = {
        0: 'burping',
        1: 'discomfort',
        2: 'hungry',
        3: 'tired',
        4: 'belly_pain'
    }
    result = label_mapping[max_index]
    # return result, str(round(pred[0][max_index]*100, 2))
    return result



@app.route('/predict', methods=['POST'])
def predict():
    try:
        if request.method == 'POST':
            audio_file = request.files['audio']
            path = os.path.join(audio_file.filename)
            audio_file.save(path)
            res = get_predict(path)

            return jsonify({
                'res': res
            })
        else:
            return jsonify({
                'res': "Use post method"
            })
    except Exception as e:
        print(e)


